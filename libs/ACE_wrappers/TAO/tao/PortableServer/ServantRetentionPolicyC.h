// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.1.9
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:152

#ifndef _TAO_PIDL_SERVANTRETENTIONPOLICYC_KVFDOM_H_
#define _TAO_PIDL_SERVANTRETENTIONPOLICYC_KVFDOM_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/PortableServer/portableserver_export.h"
#include "tao/Basic_Types.h"
#include "tao/Object.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/PolicyC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 1 || TAO_BETA_VERSION != 9
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_PortableServer_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_ch.cpp:38

namespace PortableServer
{

  // TAO_IDL - Generated from
  // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_enum\enum_ch.cpp:47

  enum ServantRetentionPolicyValue
  {
    RETAIN,
    NON_RETAIN
  };

  typedef ServantRetentionPolicyValue &ServantRetentionPolicyValue_out;

  // TAO_IDL - Generated from
  // c:\gamez\ace_wrappers\tao\tao_idl\be\be_interface.cpp:750

#if !defined (_PORTABLESERVER_SERVANTRETENTIONPOLICY__VAR_OUT_CH_)
#define _PORTABLESERVER_SERVANTRETENTIONPOLICY__VAR_OUT_CH_

  class ServantRetentionPolicy;
  typedef ServantRetentionPolicy *ServantRetentionPolicy_ptr;

  typedef
    TAO_Objref_Var_T<
        ServantRetentionPolicy
      >
    ServantRetentionPolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        ServantRetentionPolicy
      >
    ServantRetentionPolicy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:43

  class TAO_PortableServer_Export ServantRetentionPolicy
    : public virtual ::CORBA::Policy
  
  {
  public:

    // TAO_IDL - Generated from
    // c:\gamez\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    typedef ServantRetentionPolicy_ptr _ptr_type;
    typedef ServantRetentionPolicy_var _var_type;
    typedef ServantRetentionPolicy_out _out_type;

    // The static operations.
    static ServantRetentionPolicy_ptr _duplicate (ServantRetentionPolicy_ptr obj);

    static void _tao_release (ServantRetentionPolicy_ptr obj);

    static ServantRetentionPolicy_ptr _narrow (::CORBA::Object_ptr obj);
    static ServantRetentionPolicy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ServantRetentionPolicy_ptr _nil (void);

    virtual ::PortableServer::ServantRetentionPolicyValue value (
      void) = 0;

    virtual ::CORBA::Policy_ptr copy (
      void) = 0;

    virtual void destroy (
      void) = 0;

    // TAO_IDL - Generated from
    // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ServantRetentionPolicy (void);

    

    virtual ~ServantRetentionPolicy (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ServantRetentionPolicy (const ServantRetentionPolicy &);

    void operator= (const ServantRetentionPolicy &);
  };

// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_ch.cpp:67

} // module PortableServer

// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:904

  template<>
  class Arg_Traits< ::PortableServer::ServantRetentionPolicyValue>
    : public
        Basic_Arg_Traits_T<
            ::PortableServer::ServantRetentionPolicyValue,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_traits.cpp:62


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_PORTABLESERVER_SERVANTRETENTIONPOLICY__TRAITS_)
#define _PORTABLESERVER_SERVANTRETENTIONPOLICY__TRAITS_

  template<>
  struct TAO_PortableServer_Export Objref_Traits< ::PortableServer::ServantRetentionPolicy>
  {
    static ::PortableServer::ServantRetentionPolicy_ptr duplicate (
        ::PortableServer::ServantRetentionPolicy_ptr p);
    static void release (
        ::PortableServer::ServantRetentionPolicy_ptr p);
    static ::PortableServer::ServantRetentionPolicy_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::PortableServer::ServantRetentionPolicy_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_enum\cdr_op_ch.cpp:37



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_PortableServer_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, PortableServer::ServantRetentionPolicyValue _tao_enumerator);
TAO_PortableServer_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, PortableServer::ServantRetentionPolicyValue &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:1703


TAO_END_VERSIONED_NAMESPACE_DECL

#include /**/ "ace/post.h"

#endif /* ifndef */

