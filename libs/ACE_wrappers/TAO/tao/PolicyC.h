// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.1.9
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:152

#ifndef _TAO_PIDL_POLICYC_KSG3JV_H_
#define _TAO_PIDL_POLICYC_KSG3JV_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/TAO_Export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/UShortSeqC.h"
#include "tao/CurrentC.h"
#include "tao/Policy_ForwardC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 1 || TAO_BETA_VERSION != 9
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_root\root_ch.cpp:160

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_ch.cpp:38

namespace CORBA
{

  // TAO_IDL - Generated from
  // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_typedef\typedef_ch.cpp:373

  typedef ::CORBA::Short PolicyErrorCode;
  typedef ::CORBA::Short_out PolicyErrorCode_out;

  // TAO_IDL - Generated from
  // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_constant\constant_ch.cpp:38

  const CORBA::Short BAD_POLICY = 0;

  // TAO_IDL - Generated from
  // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_constant\constant_ch.cpp:38

  const CORBA::Short UNSUPPORTED_POLICY = 1;

  // TAO_IDL - Generated from
  // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_constant\constant_ch.cpp:38

  const CORBA::Short BAD_POLICY_TYPE = 2;

  // TAO_IDL - Generated from
  // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_constant\constant_ch.cpp:38

  const CORBA::Short BAD_POLICY_VALUE = 3;

  // TAO_IDL - Generated from
  // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_constant\constant_ch.cpp:38

  const CORBA::Short UNSUPPORTED_POLICY_VALUE = 4;

  // TAO_IDL - Generated from
  // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_exception\exception_ch.cpp:44

  class TAO_Export PolicyError : public ::CORBA::UserException
  {
  public:
    CORBA::PolicyErrorCode reason;

    PolicyError (void);
    PolicyError (const PolicyError &);
    ~PolicyError (void);

    PolicyError &operator= (const PolicyError &);

    static void _tao_any_destructor (void *);

    static PolicyError *_downcast ( ::CORBA::Exception *);
    static const PolicyError *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_exception\exception_ctor.cpp:54

    PolicyError (
        CORBA::PolicyErrorCode _tao_reason);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_exception\exception_ch.cpp:44

  class TAO_Export InvalidPolicies : public ::CORBA::UserException
  {
  public:
    CORBA::UShortSeq indices;

    InvalidPolicies (void);
    InvalidPolicies (const InvalidPolicies &);
    ~InvalidPolicies (void);

    InvalidPolicies &operator= (const InvalidPolicies &);

    static void _tao_any_destructor (void *);

    static InvalidPolicies *_downcast ( ::CORBA::Exception *);
    static const InvalidPolicies *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_exception\exception_ctor.cpp:54

    InvalidPolicies (
        const CORBA::UShortSeq & _tao_indices);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\gamez\ace_wrappers\tao\tao_idl\be\be_interface.cpp:750

#if !defined (_CORBA_POLICY__VAR_OUT_CH_)
#define _CORBA_POLICY__VAR_OUT_CH_

  class Policy;
  typedef Policy *Policy_ptr;

  typedef
    TAO_Objref_Var_T<
        Policy
      >
    Policy_var;
  
  typedef
    TAO_Objref_Out_T<
        Policy
      >
    Policy_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:43

  class TAO_Export Policy
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<Policy>;

    // TAO_IDL - Generated from
    // c:\gamez\ace_wrappers\tao\tao_idl\be\be_type.cpp:307

    typedef Policy_ptr _ptr_type;
    typedef Policy_var _var_type;
    typedef Policy_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Policy_ptr _duplicate (Policy_ptr obj);

    static void _tao_release (Policy_ptr obj);

    static Policy_ptr _narrow (::CORBA::Object_ptr obj);
    static Policy_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Policy_ptr _nil (void);

    virtual ::CORBA::PolicyType policy_type (
      void);

    virtual ::CORBA::Policy_ptr copy (
      void);

    virtual void destroy (
      void);

    // TAO_IDL - Generated from
    // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    virtual CORBA::Boolean _tao_encode (TAO_OutputCDR &);
    virtual CORBA::Boolean _tao_decode (TAO_InputCDR &);
    virtual TAO_Cached_Policy_Type _tao_cached_type (void) const;
    virtual TAO_Policy_Scope _tao_scope (void) const;
    
  
  protected:
    // Concrete interface only.
    Policy (void);

    // Concrete non-local interface only.
    Policy (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    Policy (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~Policy (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Policy (const Policy &);

    void operator= (const Policy &);
  };

// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_ch.cpp:67

} // module CORBA

// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:68


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:147

#if !defined (_CORBA_POLICY__ARG_TRAITS_)
#define _CORBA_POLICY__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::CORBA::Policy>
    : public
        Object_Arg_Traits_T<
            ::CORBA::Policy_ptr,
            ::CORBA::Policy_var,
            ::CORBA::Policy_out,
            TAO::Objref_Traits<CORBA::Policy>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_traits.cpp:62


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_CORBA_POLICY__TRAITS_)
#define _CORBA_POLICY__TRAITS_

  template<>
  struct TAO_Export Objref_Traits< ::CORBA::Policy>
  {
    static ::CORBA::Policy_ptr duplicate (
        ::CORBA::Policy_ptr p);
    static void release (
        ::CORBA::Policy_ptr p);
    static ::CORBA::Policy_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBA::Policy_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_exception\cdr_op_ch.cpp:40

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::PolicyError &);
TAO_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::PolicyError &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_exception\cdr_op_ch.cpp:40

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InvalidPolicies &);
TAO_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InvalidPolicies &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:44


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::Policy_ptr );
TAO_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::Policy_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\gamez\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:1703


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "PolicyC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

